{"version":3,"sources":["GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isListReversed","sortBy","reverseList","setState","sortList","sortByLength","resetList","goodsFromServer","this","props","worksCopy","sort","name1","name2","localeCompare","length","reverse","className","map","goodElem","type","onClick","Component","App","isListVisible","start","ReactDOM","render","document","getElementById"],"mappings":"0OAWMA,E,4MACJC,MAAQ,CACNC,gBAAgB,EAChBC,OAAQ,I,EAGVC,YAAc,WACZ,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,gBAAiBD,EAAMC,oB,EAI3BI,SAAW,WACT,EAAKD,SAAS,CAAEF,OAAQ,U,EAG1BI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,Y,EAG1BK,UAAY,WACV,EAAKH,SAAS,CACZH,gBAAgB,EAChBC,OAAQ,M,4CAIZ,WACE,IAAQM,EAAoBC,KAAKC,MAAzBF,gBACR,EAAmCC,KAAKT,MAAhCC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,OAClBS,EAAS,YAAOH,GAiBtB,OAfAG,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQZ,GACN,IAAK,OACH,OAAOW,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITf,GACFU,EAAUM,UAIV,qCACE,oBAAIC,UAAU,YAAd,SACGP,EAAUQ,KAAI,SAAAC,GAAQ,OACrB,6BACGA,GADMA,QAKb,wBACEC,KAAK,SACLC,QAASb,KAAKN,YAFhB,oBAOA,wBACEkB,KAAK,SACLC,QAASb,KAAKJ,SAFhB,iCAOA,wBACEgB,KAAK,SACLC,QAASb,KAAKF,UAFhB,mBAMA,wBACEc,KAAK,SACLC,QAASb,KAAKH,aAFhB,iC,GA5EgBiB,aAuFTxB,IC9FTS,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIgB,E,4MACJxB,MAAQ,CACNyB,eAAe,G,EAGjBC,MAAQ,WACN,EAAKtB,UAAS,SAAAJ,GACZ,MAAO,CACLyB,eAAgBzB,EAAMyB,mB,4CAK5B,WACE,IAAQA,EAAkBhB,KAAKT,MAAvByB,cAER,OACE,sBAAKP,UAAU,MAAf,UACE,uCACCO,GAAiB,cAAC,EAAD,CAAWjB,gBAAiBA,KAC5CiB,GACC,wBAAQJ,KAAK,SAASC,QAASb,KAAKiB,MAApC,0B,GArBOH,aA2BHC,IC/CfG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.79a665a1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  goodsFromServer: string[];\n};\n\ntype State = {\n  isListReversed?:boolean;\n  sortBy: string;\n};\n\nclass GoodsList extends Component<Props, State> {\n  state = {\n    isListReversed: false,\n    sortBy: '',\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isListReversed: !state.isListReversed,\n    }));\n  };\n\n  sortList = () => {\n    this.setState({ sortBy: 'name' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  resetList = () => {\n    this.setState({\n      isListReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const { goodsFromServer } = this.props;\n    const { isListReversed, sortBy } = this.state;\n    const worksCopy = [...goodsFromServer];\n\n    worksCopy.sort((name1, name2) => {\n      switch (sortBy) {\n        case 'name':\n          return name1.localeCompare(name2);\n        case 'length':\n          return name1.length - name2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isListReversed) {\n      worksCopy.reverse();\n    }\n\n    return (\n      <>\n        <ul className=\"goodsList\">\n          {worksCopy.map(goodElem => (\n            <li key={goodElem}>\n              {goodElem}\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={this.reverseList}\n        >\n          Revers\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortList}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.resetList}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          sortByLength\n        </button>\n      </>\n    );\n  }\n}\n\nexport default GoodsList;\n","import { Component } from 'react';\nimport './App.css';\nimport GoodsList from './GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  isListVisible:boolean;\n};\n\nclass App extends Component<Props, State> {\n  state = {\n    isListVisible: false,\n  };\n\n  start = () => {\n    this.setState(state => {\n      return {\n        isListVisible: !state.isListVisible,\n      };\n    });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isListVisible && <GoodsList goodsFromServer={goodsFromServer} />}\n        {!isListVisible\n        && <button type=\"button\" onClick={this.start}>Start</button>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}